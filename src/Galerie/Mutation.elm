-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Galerie.Mutation exposing (..)

import Galerie.InputObject
import Galerie.Interface
import Galerie.Object
import Galerie.Scalar
import Galerie.ScalarCodecs
import Galerie.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias BulkCreateSubscribedQueryRequiredArguments =
    { subscribed_query : List (Maybe Galerie.InputObject.SubscribedQueryInputType) }


{-| creates some SubscribedQueries
-}
bulk_create_subscribed_query : BulkCreateSubscribedQueryRequiredArguments -> SelectionSet decodesTo Galerie.Object.SubscribedQuery -> SelectionSet (Maybe (List (Maybe decodesTo))) RootMutation
bulk_create_subscribed_query requiredArgs object_ =
    Object.selectionForCompositeField "bulk_create_subscribed_query" [ Argument.required "subscribed_query" requiredArgs.subscribed_query (Galerie.InputObject.encodeSubscribedQueryInputType |> Encode.maybe |> Encode.list) ] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


type alias BulkCreateUserRequiredArguments =
    { user : List (Maybe Galerie.InputObject.UserInputType) }


{-| creates some Users
-}
bulk_create_user : BulkCreateUserRequiredArguments -> SelectionSet decodesTo Galerie.Object.User -> SelectionSet (Maybe (List (Maybe decodesTo))) RootMutation
bulk_create_user requiredArgs object_ =
    Object.selectionForCompositeField "bulk_create_user" [ Argument.required "user" requiredArgs.user (Galerie.InputObject.encodeUserInputType |> Encode.maybe |> Encode.list) ] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


type alias BulkCreateWebsocketConnectionRequiredArguments =
    { websocket_connection : List (Maybe Galerie.InputObject.WebsocketConnectionInputType) }


{-| creates some WebsocketConnections
-}
bulk_create_websocket_connection : BulkCreateWebsocketConnectionRequiredArguments -> SelectionSet decodesTo Galerie.Object.WebsocketConnection -> SelectionSet (Maybe (List (Maybe decodesTo))) RootMutation
bulk_create_websocket_connection requiredArgs object_ =
    Object.selectionForCompositeField "bulk_create_websocket_connection" [ Argument.required "websocket_connection" requiredArgs.websocket_connection (Galerie.InputObject.encodeWebsocketConnectionInputType |> Encode.maybe |> Encode.list) ] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


type alias BulkUpdateSubscribedQueryRequiredArguments =
    { subscribed_query : List (Maybe Galerie.InputObject.SubscribedQueryInputType) }


{-| Updates some SubscribedQueries
-}
bulk_update_subscribed_query : BulkUpdateSubscribedQueryRequiredArguments -> SelectionSet decodesTo Galerie.Object.SubscribedQuery -> SelectionSet (Maybe (List (Maybe decodesTo))) RootMutation
bulk_update_subscribed_query requiredArgs object_ =
    Object.selectionForCompositeField "bulk_update_subscribed_query" [ Argument.required "subscribed_query" requiredArgs.subscribed_query (Galerie.InputObject.encodeSubscribedQueryInputType |> Encode.maybe |> Encode.list) ] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


type alias BulkUpdateUserRequiredArguments =
    { user : List (Maybe Galerie.InputObject.UserInputType) }


{-| Updates some Users
-}
bulk_update_user : BulkUpdateUserRequiredArguments -> SelectionSet decodesTo Galerie.Object.User -> SelectionSet (Maybe (List (Maybe decodesTo))) RootMutation
bulk_update_user requiredArgs object_ =
    Object.selectionForCompositeField "bulk_update_user" [ Argument.required "user" requiredArgs.user (Galerie.InputObject.encodeUserInputType |> Encode.maybe |> Encode.list) ] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


type alias BulkUpdateWebsocketConnectionRequiredArguments =
    { websocket_connection : List (Maybe Galerie.InputObject.WebsocketConnectionInputType) }


{-| Updates some WebsocketConnections
-}
bulk_update_websocket_connection : BulkUpdateWebsocketConnectionRequiredArguments -> SelectionSet decodesTo Galerie.Object.WebsocketConnection -> SelectionSet (Maybe (List (Maybe decodesTo))) RootMutation
bulk_update_websocket_connection requiredArgs object_ =
    Object.selectionForCompositeField "bulk_update_websocket_connection" [ Argument.required "websocket_connection" requiredArgs.websocket_connection (Galerie.InputObject.encodeWebsocketConnectionInputType |> Encode.maybe |> Encode.list) ] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)


type alias CreateSubscribedQueryRequiredArguments =
    { subscribed_query : Galerie.InputObject.SubscribedQueryInputType }


{-| Creates a SubscribedQuery
-}
create_subscribed_query : CreateSubscribedQueryRequiredArguments -> SelectionSet decodesTo Galerie.Object.SubscribedQuery -> SelectionSet (Maybe decodesTo) RootMutation
create_subscribed_query requiredArgs object_ =
    Object.selectionForCompositeField "create_subscribed_query" [ Argument.required "subscribed_query" requiredArgs.subscribed_query Galerie.InputObject.encodeSubscribedQueryInputType ] object_ (identity >> Decode.nullable)


type alias CreateUserRequiredArguments =
    { user : Galerie.InputObject.UserInputType }


{-| Creates a User
-}
create_user : CreateUserRequiredArguments -> SelectionSet decodesTo Galerie.Object.User -> SelectionSet (Maybe decodesTo) RootMutation
create_user requiredArgs object_ =
    Object.selectionForCompositeField "create_user" [ Argument.required "user" requiredArgs.user Galerie.InputObject.encodeUserInputType ] object_ (identity >> Decode.nullable)


type alias CreateWebsocketConnectionRequiredArguments =
    { websocket_connection : Galerie.InputObject.WebsocketConnectionInputType }


{-| Creates a WebsocketConnection
-}
create_websocket_connection : CreateWebsocketConnectionRequiredArguments -> SelectionSet decodesTo Galerie.Object.WebsocketConnection -> SelectionSet (Maybe decodesTo) RootMutation
create_websocket_connection requiredArgs object_ =
    Object.selectionForCompositeField "create_websocket_connection" [ Argument.required "websocket_connection" requiredArgs.websocket_connection Galerie.InputObject.encodeWebsocketConnectionInputType ] object_ (identity >> Decode.nullable)


type alias DestroySubscribedQueryRequiredArguments =
    { id : String }


{-| Destroys a SubscribedQuery
-}
destroy_subscribed_query : DestroySubscribedQueryRequiredArguments -> SelectionSet decodesTo Galerie.Object.SubscribedQuery -> SelectionSet (Maybe decodesTo) RootMutation
destroy_subscribed_query requiredArgs object_ =
    Object.selectionForCompositeField "destroy_subscribed_query" [ Argument.required "id" requiredArgs.id Encode.string ] object_ (identity >> Decode.nullable)


type alias DestroyUserRequiredArguments =
    { id : String }


{-| Destroys a User
-}
destroy_user : DestroyUserRequiredArguments -> SelectionSet decodesTo Galerie.Object.User -> SelectionSet (Maybe decodesTo) RootMutation
destroy_user requiredArgs object_ =
    Object.selectionForCompositeField "destroy_user" [ Argument.required "id" requiredArgs.id Encode.string ] object_ (identity >> Decode.nullable)


type alias DestroyWebsocketConnectionRequiredArguments =
    { id : String }


{-| Destroys a WebsocketConnection
-}
destroy_websocket_connection : DestroyWebsocketConnectionRequiredArguments -> SelectionSet decodesTo Galerie.Object.WebsocketConnection -> SelectionSet (Maybe decodesTo) RootMutation
destroy_websocket_connection requiredArgs object_ =
    Object.selectionForCompositeField "destroy_websocket_connection" [ Argument.required "id" requiredArgs.id Encode.string ] object_ (identity >> Decode.nullable)


type alias UpdateSubscribedQueryOptionalArguments =
    { id : OptionalArgument String }


type alias UpdateSubscribedQueryRequiredArguments =
    { subscribed_query : Galerie.InputObject.SubscribedQueryInputType }


{-| Updates a SubscribedQuery
-}
update_subscribed_query : (UpdateSubscribedQueryOptionalArguments -> UpdateSubscribedQueryOptionalArguments) -> UpdateSubscribedQueryRequiredArguments -> SelectionSet decodesTo Galerie.Object.SubscribedQuery -> SelectionSet (Maybe decodesTo) RootMutation
update_subscribed_query fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { id = Absent }

        optionalArgs =
            [ Argument.optional "id" filledInOptionals.id Encode.string ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "update_subscribed_query" (optionalArgs ++ [ Argument.required "subscribed_query" requiredArgs.subscribed_query Galerie.InputObject.encodeSubscribedQueryInputType ]) object_ (identity >> Decode.nullable)


type alias UpdateUserOptionalArguments =
    { id : OptionalArgument String }


type alias UpdateUserRequiredArguments =
    { user : Galerie.InputObject.UserInputType }


{-| Updates a User
-}
update_user : (UpdateUserOptionalArguments -> UpdateUserOptionalArguments) -> UpdateUserRequiredArguments -> SelectionSet decodesTo Galerie.Object.User -> SelectionSet (Maybe decodesTo) RootMutation
update_user fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { id = Absent }

        optionalArgs =
            [ Argument.optional "id" filledInOptionals.id Encode.string ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "update_user" (optionalArgs ++ [ Argument.required "user" requiredArgs.user Galerie.InputObject.encodeUserInputType ]) object_ (identity >> Decode.nullable)


type alias UpdateWebsocketConnectionOptionalArguments =
    { id : OptionalArgument String }


type alias UpdateWebsocketConnectionRequiredArguments =
    { websocket_connection : Galerie.InputObject.WebsocketConnectionInputType }


{-| Updates a WebsocketConnection
-}
update_websocket_connection : (UpdateWebsocketConnectionOptionalArguments -> UpdateWebsocketConnectionOptionalArguments) -> UpdateWebsocketConnectionRequiredArguments -> SelectionSet decodesTo Galerie.Object.WebsocketConnection -> SelectionSet (Maybe decodesTo) RootMutation
update_websocket_connection fillInOptionals requiredArgs object_ =
    let
        filledInOptionals =
            fillInOptionals { id = Absent }

        optionalArgs =
            [ Argument.optional "id" filledInOptionals.id Encode.string ]
                |> List.filterMap identity
    in
    Object.selectionForCompositeField "update_websocket_connection" (optionalArgs ++ [ Argument.required "websocket_connection" requiredArgs.websocket_connection Galerie.InputObject.encodeWebsocketConnectionInputType ]) object_ (identity >> Decode.nullable)
