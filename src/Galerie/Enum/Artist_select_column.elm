-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Galerie.Enum.Artist_select_column exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| select columns of table "artist"

  - Created\_at - column name
  - First\_name - column name
  - Id - column name
  - Last\_name - column name
  - Nickname - column name
  - Updated\_at - column name

-}
type Artist_select_column
    = Created_at
    | First_name
    | Id
    | Last_name
    | Nickname
    | Updated_at


list : List Artist_select_column
list =
    [ Created_at, First_name, Id, Last_name, Nickname, Updated_at ]


decoder : Decoder Artist_select_column
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "created_at" ->
                        Decode.succeed Created_at

                    "first_name" ->
                        Decode.succeed First_name

                    "id" ->
                        Decode.succeed Id

                    "last_name" ->
                        Decode.succeed Last_name

                    "nickname" ->
                        Decode.succeed Nickname

                    "updated_at" ->
                        Decode.succeed Updated_at

                    _ ->
                        Decode.fail ("Invalid Artist_select_column type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : Artist_select_column -> String
toString enum =
    case enum of
        Created_at ->
            "created_at"

        First_name ->
            "first_name"

        Id ->
            "id"

        Last_name ->
            "last_name"

        Nickname ->
            "nickname"

        Updated_at ->
            "updated_at"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Artist_select_column
fromString enumString =
    case enumString of
        "created_at" ->
            Just Created_at

        "first_name" ->
            Just First_name

        "id" ->
            Just Id

        "last_name" ->
            Just Last_name

        "nickname" ->
            Just Nickname

        "updated_at" ->
            Just Updated_at

        _ ->
            Nothing
