-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Galerie.Object.Artist_aggregate_fields exposing (..)

import Galerie.Enum.Artist_select_column
import Galerie.InputObject
import Galerie.Interface
import Galerie.Object
import Galerie.Scalar
import Galerie.ScalarCodecs
import Galerie.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


type alias CountOptionalArguments =
    { columns : OptionalArgument (List Galerie.Enum.Artist_select_column.Artist_select_column)
    , distinct : OptionalArgument Bool
    }


count : (CountOptionalArguments -> CountOptionalArguments) -> SelectionSet (Maybe Int) Galerie.Object.Artist_aggregate_fields
count fillInOptionals =
    let
        filledInOptionals =
            fillInOptionals { columns = Absent, distinct = Absent }

        optionalArgs =
            [ Argument.optional "columns" filledInOptionals.columns (Encode.enum Galerie.Enum.Artist_select_column.toString |> Encode.list), Argument.optional "distinct" filledInOptionals.distinct Encode.bool ]
                |> List.filterMap identity
    in
    Object.selectionForField "(Maybe Int)" "count" optionalArgs (Decode.int |> Decode.nullable)


max : SelectionSet decodesTo Galerie.Object.Artist_max_fields -> SelectionSet (Maybe decodesTo) Galerie.Object.Artist_aggregate_fields
max object_ =
    Object.selectionForCompositeField "max" [] object_ (identity >> Decode.nullable)


min : SelectionSet decodesTo Galerie.Object.Artist_min_fields -> SelectionSet (Maybe decodesTo) Galerie.Object.Artist_aggregate_fields
min object_ =
    Object.selectionForCompositeField "min" [] object_ (identity >> Decode.nullable)
