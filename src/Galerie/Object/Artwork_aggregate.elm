-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Galerie.Object.Artwork_aggregate exposing (..)

import Galerie.InputObject
import Galerie.Interface
import Galerie.Object
import Galerie.Scalar
import Galerie.ScalarCodecs
import Galerie.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


aggregate : SelectionSet decodesTo Galerie.Object.Artwork_aggregate_fields -> SelectionSet (Maybe decodesTo) Galerie.Object.Artwork_aggregate
aggregate object_ =
    Object.selectionForCompositeField "aggregate" [] object_ (identity >> Decode.nullable)


nodes : SelectionSet decodesTo Galerie.Object.Artwork -> SelectionSet (List decodesTo) Galerie.Object.Artwork_aggregate
nodes object_ =
    Object.selectionForCompositeField "nodes" [] object_ (identity >> Decode.list)
